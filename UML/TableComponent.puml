@startuml
class TableComponent {
    entities
    tableView
}

interface PaginationInterface <T> {
    first()
    prev()
    next()
    latest()
    setCurrentPage(pageNumber: number)
    getCurrentPage(): number
    getLimitRows (): number
    getArrayLimitRows (): number[]
    getEntities(entities: T[]): T[]
}
interface DensityInterface {
    setDensity(density: number)
    getDensity(): number
}
interface ResetInterface {
    reload()
}

interface ChosenInterface <T> {
    add (entity: T)
    remove (entity: T)
    set (entity: T[])
    get(): T[]
    isChosen(entity: T): boolean
}

interface SortInterface <T> {
    getEntities (entities: T[], columns: ColumnHeadEntityInterface[]): T[]
    by(field: string)
}

interface RenderInterface {
    reRenderView()
}

interface TableInterface <T> {
  check(entity: T, entity2: T): boolean
  getSorter (): SortInterface
  getChooser (): ChosenInterface
  getEntities(entities: T[]): T[]
  getBodyColumns(entity: T): ColumnBodyEntityInterface[]
  getHeadColumns(): ColumnHeadEntityInterface[]
  getTableName(): string
}

abstract class TableAbstract <T> {
  {abstract} getPagination(): PaginationInterface
  {abstract} getDensity(): DensityInterface
  {abstract} getReset(): ResetInterface
}

interface ColumnHeadEntityInterface {
  getLabel (): string
  isHidden(): boolean
  setHidden(value: boolean)
  isHideable(): boolean
  setHideable(value: boolean)
}
interface ColumnBodyEntityInterface {
  getName(): string
  getRawValue(): any
  getHtmlValue(): string
}

TableInterface --o SortInterface
note right on link
	sorter.by("name")
	sorted = sorter.getEntities(entities, headColumns)
end note

TableInterface --o ChosenInterface
note left on link
	chooser.add(entity)
	chooser.remove(entity)
end note

ColumnBodyEntityInterface "1 .. *" ----* TableInterface
ColumnHeadEntityInterface "1 .. *" ----* TableInterface

TableAbstract --o PaginationInterface
note left on link
	pag.next()
end note
TableAbstract --o DensityInterface
note left on link
	density.set(1)
end note
TableAbstract --o ResetInterface
note right on link
	reset.reload()
end note

TableInterface - TableComponent
note right on link
    const headColumns = tableView.getHeadColumns()
    const bodyColumns = tableView.getBodyColumns(entities)
    const onReset = () => {
        tableView.getReset().reload()
    }
    const onChangePage = (pageNumber) => {
        tableView.getPagination().page(pageNumber)
    }
    const onChoose = (entity) => {
        tableView.getChooser().add(entity)
    }
    const onSort = (field) => {
        tableView.getSorter().by(field)
    }
    const onDensity = (density) => {
        tableView.setDensity(density)
    }
end note

TableAbstract ..|> TableInterface
TableInterface ..|> RenderInterface

@enduml
